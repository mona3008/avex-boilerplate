/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/sections/product.js":
/*!*****************************************!*\
  !*** ./src/scripts/sections/product.js ***!
  \*****************************************/
/***/ (() => {

eval("const Swiper = window.Swiper;\n\n/**\n * Image gallery with Swiperjs\n */\nconst swiperSlidersPerView = 4;\nconst thumbnailsLength = document.querySelectorAll(\n  \"[data-thumbnail-images] [data-thumbnail-item]\"\n)?.length;\n\nconst swiperThumbs = new Swiper(\"[data-thumbnail-images]\", {\n  spaceBetween: 8,\n  observer: true,\n  observeParents: true,\n  slidesPerView: swiperSlidersPerView,\n  preventClicks: false,\n  preventClicksPropagation: false,\n  allowTouchMove: false,\n  watchOverflow: true,\n  watchSlidesVisibility: true,\n  watchSlidesProgress: true,\n  direction: \"vertical\",\n  loop:\n    thumbnailsLength >= swiperSlidersPerView\n      ? true\n      : false,\n  resizeReInit: true,\n});\n\nconst swiperImages = new Swiper(\"[data-main-images]\", {\n  thumbs: {\n    swiper: swiperThumbs,\n  },\n  observer: true,\n  observeParents: true,\n  slidesPerView: 1,\n  spaceBetween: 0,\n  loop: true,\n  cssMode: true,\n  resizeReInit: true,\n  allowTouchMove: true,\n  navigation: {\n    nextEl: \".swiper-button-next\",\n    prevEl: \".swiper-button-prev\",\n  },\n  pagination: {\n    el: \".swiper-pagination\",\n    type: \"bullets\",\n    clickable: true,\n  },\n\n  breakpoints: {\n    990: {\n      loop: false,\n      slidesPerView: 1,\n      spaceBetween: 0,\n      cssMode: false,\n      pagination: false,\n      navigation: false,\n      allowTouchMove: false,\n    },\n  },\n  watchOverflow: true,\n});\n\n/**\n * Image zoomer\n */\nfunction initZoom() {\n  function zoom(e) {\n    const zoomer = e.currentTarget;\n\n    const offsetX = e?.offsetX ? e.offsetX : e.touches[0].pageX;\n    const offsetY = e?.offsetY ? e.offsetY : e.touches[0].pageX;\n\n    const x = (offsetX / zoomer.offsetWidth) * 100;\n    const y = (offsetY / zoomer.offsetHeight) * 100;\n    zoomer.style.backgroundPosition = x + \"% \" + y + \"%\";\n  }\n  if (window.innerWidth > 768) {\n    const zoomElems = document.getElementsByClassName(\"zoom\");\n    if (zoomElems && zoomElems.length) {\n      [...zoomElems].forEach((item) => {\n        item.addEventListener(\"mouseenter\", function (e) {\n          const img = item.dataset.zoomimg;\n          if (img) {\n            item.style.backgroundImage = `url(${img})`;\n          }\n        });\n        item.addEventListener(\"mousemove\", function (e) {\n          zoom(e);\n        });\n      });\n    }\n  }\n}\n\n/**\n * Variant Selector Select (dropdown) component\n */\nclass VariantSelects extends HTMLElement {\n  constructor() {\n    super();\n    this.addEventListener(\"change\", this.onVariantChange);\n    this.productForm = document.getElementById(\"product-form\");\n    this.setUnavailableOptions();\n  }\n\n  onVariantChange() {\n    this.updateOptions();\n    this.setUnavailableOptions();\n    if (this.options && this.options.includes(undefined)) return null;\n    this.updateMasterId();\n    this.toggleAddButton(true, \"\", false);\n    this.removeErrorMessage();\n\n    if (!this.currentVariant) {\n      this.toggleAddButton(true, \"\", true);\n      this.setUnavailable();\n    } else {\n      this.updateMedia();\n      this.updateURL();\n      this.updateVariantInput();\n      this.renderProductInfo();\n    }\n  }\n\n  updateOptions() {\n    this.options = Array.from(\n      this.querySelectorAll(\"select\"),\n      (select) => select.value\n    );\n  }\n\n  setUnavailableOptions() {\n    const option1Swatches = this.querySelector(`[data-option-position=\"1\"]`);\n    const option2Swatches = this.querySelector(`[data-option-position=\"2\"]`);\n    const option3Swatches = this.querySelector(`[data-option-position=\"3\"]`);\n    const selectedOption1 = option1Swatches?.querySelector(\n      \"input[type=radio]:checked\"\n    );\n    const selectedOption2 = option2Swatches?.querySelector(\n      \"input[type=radio]:checked\"\n    );\n\n    this.disableFalseOptions(1, option1Swatches);\n    this.disableFalseOptions(2, option2Swatches, selectedOption1);\n    this.disableFalseOptions(\n      3,\n      option3Swatches,\n      selectedOption1,\n      selectedOption2\n    );\n  }\n\n  disableFalseOptions(\n    option,\n    optionSwatches,\n    selectedOption1 = false,\n    selectedOption2 = false\n  ) {\n    if (!optionSwatches && !option) return null;\n\n    function hashDataCollector(variant, item, hashData, option) {\n      if (!item || !variant) return null;\n      if (variant[\"option\" + option] === item.value) {\n        if (variant.available) {\n          hashData[item.value] = hashData[item.value]\n            ? hashData[item.value] + \"1\"\n            : \"1\";\n        } else {\n          hashData[item.value] = hashData[item.value]\n            ? hashData[item.value] + \"0\"\n            : \"0\";\n        }\n      } else {\n        hashData[item.value] = hashData[item.value]\n          ? hashData[item.value] + \"x\"\n          : \"x\";\n      }\n    }\n    optionSwatches?.querySelectorAll(\"input[type='radio']\")?.forEach((item) => {\n      const hashData = {};\n      for (let variant of this.getVariantData()) {\n        if (option === 1) {\n          hashDataCollector(variant, item, hashData, option);\n        }\n        if (\n          option === 2 &&\n          selectedOption1 &&\n          variant.option1 === selectedOption1.value\n        ) {\n          hashDataCollector(variant, item, hashData, option);\n        }\n        if (\n          option === 3 &&\n          selectedOption1 &&\n          selectedOption2 &&\n          variant.option1 === selectedOption1.value &&\n          variant.option2 === selectedOption2.value\n        ) {\n          hashDataCollector(variant, item, hashData, option);\n        }\n      }\n\n      if (hashData[item.value]) {\n        item.classList.remove(\"hidden\");\n        if (\n          hashData[item.value].includes(\"0\") &&\n          !hashData[item.value].includes(\"1\")\n        ) {\n          item.classList.add(\"unavailable\");\n        } else if (hashData[item.value].includes(\"1\")) {\n          item.classList.remove(\"unavailable\");\n        } else if (\n          !hashData[item.value].includes(\"0\") &&\n          !hashData[item.value].includes(\"1\")\n        ) {\n          item.classList.add(\"hidden\");\n          if (item.checked) {\n            setTimeout(() => {\n              const availableOption = item\n                .closest(\"[data-option-position]\")\n                .querySelector('input[type=\"radio\"]:not(.hidden) + label');\n              availableOption?.click();\n            }, 0);\n          }\n        }\n      }\n    });\n  }\n\n  updateMasterId() {\n    this.currentVariant = this.getVariantData().find((variant) => {\n      return !variant.options\n        .map((option, index) => {\n          return this.options[index] === option;\n        })\n        .includes(false);\n    });\n  }\n\n  updateMedia() {\n    if (!this.currentVariant) return;\n    if (!this.currentVariant.featured_media) return;\n    const newMedia = document.querySelector(\n      `[data-media-id=\"${this.dataset.section}-${this.currentVariant.featured_media.id}\"]`\n    );\n\n    if (!newMedia) return;\n    const modalContent = document.querySelector(\n      `#ProductModal-${this.dataset.section} .product-media-modal__content`\n    );\n    const newMediaModal = modalContent.querySelector(\n      `[data-media-id=\"${this.currentVariant.featured_media.id}\"]`\n    );\n    const parent = newMedia.parentElement;\n    if (parent.firstChild == newMedia) return;\n    modalContent.prepend(newMediaModal);\n    parent.prepend(newMedia);\n    this.stickyHeader =\n      this.stickyHeader || document.querySelector(\"sticky-header\");\n    if (this.stickyHeader) {\n      this.stickyHeader.dispatchEvent(new Event(\"preventHeaderReveal\"));\n    }\n    window.setTimeout(() => {\n      parent\n        .querySelector(\"li.product__media-item\")\n        .scrollIntoView({ behavior: \"smooth\" });\n    });\n  }\n\n  updateURL() {\n    if (!this.currentVariant || this.dataset.updateUrl === \"false\") return;\n    window.history.replaceState(\n      {},\n      \"\",\n      `${this.dataset.url}?variant=${this.currentVariant.id}`\n    );\n  }\n\n  updateVariantInput() {\n    const input = this.productForm.querySelector('input[name=\"id\"]');\n    input.value = this.currentVariant.id;\n    input.dispatchEvent(new Event(\"change\", { bubbles: true }));\n  }\n\n  removeErrorMessage() {\n    if (!this.productForm) return;\n    this.productForm.querySelector(\"[data-ajax-cart-form-error]\").innerHTML =\n      \"\";\n  }\n\n  renderProductInfo() {\n    fetch(\n      `${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`\n    )\n      .then((response) => response.text())\n      .then((responseText) => {\n        const elem = `[data-price]`;\n        const html = new DOMParser().parseFromString(responseText, \"text/html\");\n        const destination = document.querySelector(elem);\n        const source = html.querySelector(elem);\n\n        if (source && destination) destination.innerHTML = source.innerHTML;\n\n        const price = document.querySelector(elem);\n\n        if (price) price.classList.remove(\"visibility-hidden\");\n        this.toggleAddButton(\n          !this.currentVariant.available,\n          window.variantStrings.soldOut\n        );\n      });\n  }\n\n  toggleAddButton(disable = true, text, modifyClass = true) {\n    const productForm = this.productForm;\n    if (!productForm) return;\n    const addButton = productForm.querySelector('[name=\"add\"]');\n\n    if (!addButton) return;\n\n    if (disable) {\n      addButton.setAttribute(\"disabled\", true);\n      if (text) addButton.textContent = text;\n    } else {\n      addButton.removeAttribute(\"disabled\");\n      addButton.textContent = window.variantStrings.addToCart;\n    }\n\n    if (!modifyClass) return;\n  }\n\n  setUnavailable() {\n    const addButton = document.querySelector('[name=\"add\"]');\n    const priceWrapper = document.querySelector(`[data-price]`);\n    if (!addButton) return;\n    addButton.textContent = window.variantStrings.unavailable;\n    if (priceWrapper) priceWrapper.classList.add(\"visibility-hidden\");\n  }\n\n  getVariantData() {\n    this.variantData =\n      this.variantData ||\n      JSON.parse(\n        document.querySelector(\"[data-product-json-variants]\").textContent\n      );\n    return this.variantData;\n  }\n}\ncustomElements.define(\"variant-selects\", VariantSelects);\n\n/**\n * Variant Selector Radio component\n */\nclass VariantRadios extends VariantSelects {\n  constructor() {\n    super();\n  }\n\n  updateOptions() {\n    const fieldsets = Array.from(this.querySelectorAll(\"fieldset\"));\n\n    this.options = fieldsets.map((fieldset) => {\n      return Array.from(fieldset.querySelectorAll(\"input\")).find(\n        (radio) => radio.checked\n      )?.value;\n    });\n  }\n}\ncustomElements.define(\"variant-radios\", VariantRadios);\n\n/**\n * Add all load events here\n */\nwindow.addEventListener(\"DOMContentLoaded\", function () {\n  initZoom();\n});\n\n/**\n * Add all resize events here\n */\nwindow.addEventListener(\"resize\", function () {\n  initZoom();\n});\n\n\n//# sourceURL=webpack://shopifytheme/./src/scripts/sections/product.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts/sections/product.js"]();
/******/ 	
/******/ })()
;