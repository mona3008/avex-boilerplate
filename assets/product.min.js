"use strict";function _createForOfIteratorHelper(t,r){var e;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(e=_unsupportedIterableToArray(t))||r&&t&&"number"==typeof t.length){e&&(t=e);var n=0,r=function(){};return{s:r,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,i=!1;return{s:function(){e=t[Symbol.iterator]()},n:function(){var t=e.next();return a=t.done,t},e:function(t){i=!0,o=t},f:function(){try{a||null==e.return||e.return()}finally{if(i)throw o}}}}function _unsupportedIterableToArray(t,r){if(t){if("string"==typeof t)return _arrayLikeToArray(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(t,r):void 0}}function _arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}var selectors={form:"#productForm",variantSelectId:"variant-select",productOptionSelect:".product-option-select"},productJSON=JSON.parse(document.getElementById("product-json").innerHTML);function selectCallback(t){console.log(t)}function serializeForm(t){var r={},e=new FormData(t),n=_createForOfIteratorHelper(e.keys());try{for(n.s();!(o=n.n()).done;){var o=o.value;r[o]=e.get(o)}}catch(t){n.e(t)}finally{n.f()}return r}new Shopify.OptionSelectors(selectors.variantSelectId,{product:productJSON,onVariantSelected:selectCallback,enableHistoryState:!0});var productForm=document.querySelector(selectors.form);productForm.addEventListener("submit",function(t){t.preventDefault();t=serializeForm(this);CartJS.addItem(t.id,t.quantity,{},{success:function(t,r){console.log("Added to cart: ",t,r)},error:function(t,r,e){console.log("Error in adding to cart: ",e)}})}),Array.from(document.querySelectorAll(selectors.productOptionSelect)).map(function(t){t.addEventListener("change",function(t){var r=serializeForm(productForm),e=Object.keys(r).map(function(t){return/^option/.test(t)&&r[t]}).filter(function(t){return t}),n=t.target.getAttribute("name"),o=productJSON.variants.find(function(t){return JSON.stringify(t.options)===JSON.stringify(e)}),t=document.querySelector(".single-option-selector[data-option=".concat(n,"]"));t.value=o[n],t.dispatchEvent(new Event("change"))})});